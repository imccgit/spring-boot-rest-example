// Define a remote for SSHs
def remote = [:]
remote.name = "staging"
// ubuntu
remote.host = "ec2-34-217-57-44.us-west-2.compute.amazonaws.com"
remote.allowAnyHosts = true


node {

    withMaven(
    
    	maven:'maven',
    	jdk: 'default_jdk'
   
    	) {

        stage('Checkout') {
            git url: 'https://github.com/imccgit/spring-boot-rest-example.git', branch: 'master'
        }

        stage('Build') {
        	// run the maven build
            sh 'mvn clean install'
            
            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
        }
    	
	    withCredentials([sshUserPrivateKey(credentialsId: '746d249c-c13d-4ed6-bd40-f3f8b268b13b', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
		    // Staging
		    remote.user = userName
		    remote.identityFile = identity
		    
		    environment {
	        	JENKINS_NODE_COOKIE = 'dontKillMe'
	    	}
		    
		    stage("Staging") {
		    
		    	sshagent(credentials : ['746d249c-c13d-4ed6-bd40-f3f8b268b13b']) {
            		// sh 'ssh -o StrictHostKeyChecking=no ubuntu@ec2-34-217-57-44.us-west-2.compute.amazonaws.com uptime'
            		withEnv(["JENKINS_NODE_COOKIE=dontKillMe"]){
                	sh 'scp target/spring-boot-rest-example-0.5.0.jar ubuntu@ec2-34-217-57-44.us-west-2.compute.amazonaws.com:~'
                	sh 'ssh ubuntu@ec2-34-217-57-44.us-west-2.compute.amazonaws.com ./start.sh' 
            		}
        		}
			}
		}
	}
}