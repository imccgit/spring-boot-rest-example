// Define a remote for SSHs
def remote = [:]
remote.name = "staging"
remote.host = "ec2-34-220-2-142.us-west-2.compute.amazonaws.com"
remote.allowAnyHosts = true


node {

    withMaven(
    
    	maven:'maven',
    	jdk: 'default_jdk'
   
    	) {

        stage('Checkout') {
            git url: 'https://github.com/imccgit/spring-boot-rest-example.git', branch: 'master'
        }

        stage('Build') {
        	// run the maven build
            sh 'mvn clean install'
            
            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
        }
    	
	    withCredentials([sshUserPrivateKey(credentialsId: '7098b688-8eef-4da7-92b7-e5f9933e5337', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
	    // Staging
	    remote.user = userName
	    remote.identityFile = identity
	    
	    stage("Staging") {
	        	//sshPut remote: remote, from: 'target/spring-boot-rest-example-0.5.0.jar', into: '.'
	        	//sshCommand remote: remote, command: 'chmod 700 spring-boot-rest-example-0.5.0.jar'
	        	//sshCommand remote: remote, command: 'sudo ln -s spring-boot-rest-example-0.5.0.jar /etc/init.d/spring-boot-rest-example-0.5.0'
	        	withEnv(['JENKINS_NODE_COOKIE=dontKillMe']) {
                    sshCommand remote: remote, command:  'setsid java -jar spring-boot-rest-example-0.5.0.jar &'
                    //sh 'nohup java -jar target/spring-boot-rest-example-0.5.0.jar &'
                }
	        }
	    }
    }
}