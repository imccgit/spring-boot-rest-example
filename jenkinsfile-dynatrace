// Define a remote for SSHs
def remote = [:]
remote.name = "staging"
// ubuntu
remote.host = "ec2-34-217-57-44.us-west-2.compute.amazonaws.com"
remote.allowAnyHosts = true


node {

    withMaven(

    	maven:'maven',
    	jdk: 'default_jdk'

    	) {

        stage('Checkout') {
            git url: 'https://github.com/imccgit/spring-boot-rest-example.git', branch: 'master'
        }

        stage('Build') {
        	// run the maven build
            sh 'mvn clean install'

            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

	    withCredentials([sshUserPrivateKey(credentialsId: 'aws_ubuntu_id', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
		    // Staging
		    remote.user = userName
		    remote.identityFile = identity

		    environment {
	        	JENKINS_NODE_COOKIE = 'dontKillMe'
	    	}

		    stage("Staging") {

		    	sshagent(credentials : ['aws_ubuntu_id']) {
            		// sh 'ssh -o StrictHostKeyChecking=no ubuntu@ec2-54-191-183-17.us-west-2.compute.amazonaws.com uptime'
            		withEnv(["JENKINS_NODE_COOKIE=dontKillMe"]){
                	sh 'scp target/spring-boot-rest-example-0.5.0.jar ubuntu@ec2-54-191-183-17.us-west-2.compute.amazonaws.com:~'
                	sh 'ssh ubuntu@ec2-54-191-183-17.us-west-2.compute.amazonaws.com ./start.sh'
            		}
        		}

    		 stage("Staging Test") {
    		 	sh 'curl http://ec2-34-217-57-44.us-west-2.compute.amazonaws.com:8091/health'
    		 }
			}
		}
	}
}
